@using RiversideCms.Mvc.Extensions
@using Riverside.Cms.Services.Element.Client

@model IElementView<FormElementSettings, object>

<div class="rcms-form">

    <form role="form" data-submittedmessage="@Model.Settings.SubmittedMessage">

        @foreach (FormField field in Model.Settings.Fields)
        {
            <div class="form-group @if (field.Required) {<text>has-error</text>}">
                <label class="control-label" for="field_@field.FormFieldId">@field.Label</label>
                @switch (field.FieldType)
                {
                    case FormFieldType.TextField:
                        <input 
                            data-required="@if (field.Required) {<text>1</text>} else {<text>0</text>}"
                            type="text"
                            id="field_@field.FormFieldId"
                            name="field_@field.FormFieldId"
                            autocomplete="off"
                            autocorrect="off"
                            autocapitalize="off"
                            spellcheck="false"
                            class="form-control" />
                        break;

                    case FormFieldType.MultiLineTextField:
                        <textarea
                             data-required="@if (field.Required) {<text>1</text>} else {<text>0</text>}"
                             id="field_@field.FormFieldId"
                             name="field_@field.FormFieldId"
                             rows="5"
                             autocomplete="off"
                             autocorrect="off"
                             autocapitalize="off"
                             spellcheck="false"
                             class="form-control"></textarea>
                        break;
                }
            </div>
        }

        <button class="btn btn-primary" type="submit" @if (Model.Settings.Fields.Where(f => f.Required).Any()) {<text>disabled="disabled"</text>}>@Model.Settings.SubmitButtonLabel</button>

    </form>

</div>

@{
    this.Context.Items["script_jquery"] = new ScriptInclude { Priority = 1, Name = "jquery.min.js" };
    this.Context.Items["script_album"] = new ScriptInclude { Priority = 4, Name = "form.js" };
}
