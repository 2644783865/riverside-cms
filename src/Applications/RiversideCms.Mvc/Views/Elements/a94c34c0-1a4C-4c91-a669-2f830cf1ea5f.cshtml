@using RiversideCms.Mvc.Extensions
@using Riverside.Cms.Services.Core.Client
@using Riverside.Cms.Services.Element.Client

@model IElementView<NavigationBarElementSettings, NavigationBarElementContent>

@{
    bool userLoggedOn = User.Identity.IsAuthenticated;
    bool showLoggedOffUserOptions = Model.Settings.ShowLoggedOffUserOptions && !userLoggedOn;
    bool showLoggedOnUserOptions = Model.Settings.ShowLoggedOnUserOptions && userLoggedOn;
    bool adminTabs = showLoggedOnUserOptions || showLoggedOffUserOptions;
    bool pageTabs = Model.Content.Tabs.Count() > 0;
}

<div class="rcms-nav-bar">
    <nav class="navbar navbar-inverse">
        <div class="container">
            <div class="navbar-header">
                @if (adminTabs || pageTabs)
                {
                    <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                }
                @if (Model.Settings.Brand != string.Empty)
                {
                    <a class="navbar-brand" href="@Url.Content("~/")">@Model.Settings.Brand</a>
                }
            </div>
            @if (pageTabs || adminTabs)
            {
                <div id="navbar" class="navbar-collapse collapse">
                    @if (pageTabs)
                    {
                        <ul class="nav navbar-nav">
                            @foreach (NavigationBarContentTab tab in Model.Content.Tabs)
                            {
                                <li class="@if (tab.Active) {<text>active</text>}">@Html.PageLink(tab.Name, tab.PageId, tab.PageName, tab.Home, null, null)</li>
                            }
                        </ul>
                    }
                    @if (adminTabs)
                    {
                        <ul class="nav navbar-nav navbar-right admin-options">
                            <li class="dropdown">
                                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                                    <i class="fa fa-fw fa-user" aria-hidden="true"></i>
                                    <span class="caret"></span>
                                </a>
                                <ul class="dropdown-menu">
                                    <li class="dropdown-header">User Options</li>
                                    @if (showLoggedOnUserOptions)
                                    {
                                        <li><a href="@Url.RouteUrl("UpdateProfile")"><i class="fa fa-fw fa-user" aria-hidden="true"></i> Update your profile</a></li>
                                        <li><a href="@Url.RouteUrl("ChangePassword")"><i class="fa fa-fw fa-lock" aria-hidden="true"></i> Change your password</a></li>
                                        <li><a href="@Url.RouteUrl("Logout")"><i class="fa fa-fw fa-power-off" aria-hidden="true"></i> Log out</a></li>
                                    }
                                    @if (showLoggedOffUserOptions)
                                    {
                                        <li><a href="@Url.RouteUrl("Login")"><i class="fa fa-fw" aria-hidden="true"></i> Log in</a></li>
                                        <li><a href="@Url.RouteUrl("Register")"><i class="fa fa-fw fa-user-plus" aria-hidden="true"></i> Register</a></li>
                                    }
                                </ul>
                            </li>
                        </ul>
                    }
                </div>
            }
        </div>
    </nav>
</div>

@{
    this.Context.Items["script_jquery"] = new ScriptInclude { Priority = 1, Name = "jquery.min.js" };
    this.Context.Items["script_bootstrap"] = new ScriptInclude { Priority = 2, Name = "bootstrap.min.js" };
}